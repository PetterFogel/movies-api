{"version":3,"sources":["context/movieContext.tsx","common/components/Header.tsx","common/components/movieCard.tsx","features/movies-screen/MovieItem.tsx","features/favorites-screen/MovieFavorites.tsx","features/movies-screen/MovieDetails.tsx","common/functions/checkPickedCategoryHandler/checkPickedCategoryHandler.ts","features/movies-screen/MovieList.tsx","features/movies-screen/MoviesScreen.tsx","features/search-screen/SearchMovie.tsx","app-routes/AppRoutes.tsx","App.tsx","index.tsx"],"names":["API_KEY","MovieContext","createContext","movieList","searchedMovie","specificMovie","id","title","poster_path","vote_average","favoritesList","isLoading","error","disabled","fetchMovies","category","searchMovie","fetchSpecificMovie","addToFavorites","movie","removeFromFavorites","MovieContextProvider","props","useState","movies","setMovies","setSearchMovie","JSON","parse","localStorage","getItem","setFavoritesList","setSpecificMovie","isFetching","setIsFetching","errorMsg","setErrorMsg","setDisabled","a","setTimeout","axios","get","response","data","results","length","Error","message","movieTitle","movieId","movieObj","overview","release_date","genres","favorite","toString","console","log","context","newFavoritesList","setItem","stringify","filter","Provider","value","children","Header","toggle","setToggle","navCloseHandler","className","style","right","to","textDecoration","onClick","MovieCard","MovieItem","history","useHistory","moviePoster","handleClick","push","src","alt","MovieFavorites","useContext","map","MovieDetails","params","useParams","useEffect","genre","name","checkPickedCateGoryHandler","MovieList","MoviesScreen","setFilter","sortingHandler","background","SearchMovie","inputValue","setInputValue","onSubmit","e","preventDefault","type","placeholder","onChange","target","AppRoutes","path","exact","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c5fa7ab.chunk.js","sourcesContent":["/** @format */\r\n\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { createContext } from \"react\";\r\nimport { Movie } from \"../models/movie\";\r\n\r\nconst API_KEY: string = \"46eda78843a870bbbc6d78ac7c1be16d\";\r\n\r\ninterface TypeContextObj {\r\n  movieList: Movie[];\r\n  searchedMovie: Movie[];\r\n  specificMovie: Movie;\r\n  favoritesList: Movie[];\r\n  isLoading: boolean;\r\n  error: string | null;\r\n  disabled: boolean;\r\n  fetchMovies: (category: string) => void;\r\n  searchMovie: (title: string) => void;\r\n  fetchSpecificMovie: (id: string) => void;\r\n  addToFavorites: (movie: Movie) => void;\r\n  removeFromFavorites: (movie: Movie) => void;\r\n}\r\n\r\nconst MovieContext = createContext<TypeContextObj>({\r\n  movieList: [],\r\n  searchedMovie: [],\r\n  specificMovie: {\r\n    id: \"\",\r\n    title: \"\",\r\n    poster_path: \"\",\r\n    vote_average: \"\",\r\n  },\r\n  favoritesList: [],\r\n  isLoading: false,\r\n  error: null,\r\n  disabled: false,\r\n  fetchMovies: (category: string) => {},\r\n  searchMovie: (title: string) => {},\r\n  fetchSpecificMovie: (id: string) => {},\r\n  addToFavorites: (movie: Movie) => {},\r\n  removeFromFavorites: (movie: Movie) => {},\r\n});\r\n\r\nexport function MovieContextProvider(props: any) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [searchMovie, setSearchMovie] = useState([]);\r\n  const [favoritesList, setFavoritesList] = useState<Movie[]>(\r\n    JSON.parse(localStorage.getItem(\"Movies\") || \"[]\")\r\n  );\r\n  const [specificMovie, setSpecificMovie] = useState<Movie>({\r\n    id: \"\",\r\n    title: \"\",\r\n    poster_path: \"\",\r\n    vote_average: \"\",\r\n  });\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  const [errorMsg, setErrorMsg] = useState<string | null>(null);\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  async function fetchMoviesHandler(category: string) {\r\n    setErrorMsg(null);\r\n    setIsFetching(true);\r\n    setTimeout(async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `https://api.themoviedb.org/3/movie/${category}?api_key=${API_KEY}&language=en-US&page=1`\r\n        );\r\n\r\n        const data = response.data.results;\r\n        if (data.length <= 0) {\r\n          throw Error(\"Something went wrong... :(\");\r\n        }\r\n        setMovies(data);\r\n      } catch (error) {\r\n        if (error instanceof Error) {\r\n          setErrorMsg(error.message);\r\n        }\r\n      }\r\n      setIsFetching(false);\r\n    }, 1000);\r\n  }\r\n\r\n  async function searchMovieHandler(movieTitle: string) {\r\n    setSearchMovie([]);\r\n    setErrorMsg(null);\r\n    setIsFetching(true);\r\n    setTimeout(async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${movieTitle}`\r\n        );\r\n        const data = response.data.results;\r\n        if (data.length <= 0) {\r\n          throw Error(`Movie \"${movieTitle}\" was not found... :(`);\r\n        }\r\n        setSearchMovie(data);\r\n      } catch (error) {\r\n        if (error instanceof Error) {\r\n          setErrorMsg(error.message);\r\n        }\r\n      }\r\n      setIsFetching(false);\r\n    }, 1000);\r\n  }\r\n\r\n  async function fetchSpecificMovieHandler(movieId: string) {\r\n    setDisabled(false);\r\n    setSpecificMovie({\r\n      id: \"\",\r\n      title: \"\",\r\n      poster_path: \"\",\r\n      vote_average: \"\",\r\n    });\r\n    setIsFetching(true);\r\n    setTimeout(async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\r\n        );\r\n        const data = response.data;\r\n        const movieObj: Movie = {\r\n          id: data.id,\r\n          title: data.title,\r\n          poster_path: data.poster_path,\r\n          vote_average: data.vote_average,\r\n          overview: data.overview,\r\n          release_date: data.release_date,\r\n          genres: data.genres,\r\n        };\r\n        for (const favorite of favoritesList) {\r\n          if (movieId === favorite.id.toString()) {\r\n            setDisabled(true);\r\n          }\r\n        }\r\n        setSpecificMovie(movieObj);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      setIsFetching(false);\r\n    }, 1000);\r\n  }\r\n\r\n  function addToFavoritesHandler(movie: Movie) {\r\n    const newFavoritesList = [...favoritesList, movie];\r\n    setFavoritesList(newFavoritesList);\r\n    localStorage.setItem(\"Movies\", JSON.stringify(newFavoritesList));\r\n    setDisabled(false);\r\n  }\r\n\r\n  function removeFromFavoritesHandler(movie: Movie) {\r\n    const newFavoritesList = favoritesList.filter(\r\n      (favorite) => favorite.id !== movie.id\r\n    );\r\n    setFavoritesList(newFavoritesList);\r\n    localStorage.setItem(\"Movies\", JSON.stringify(newFavoritesList));\r\n  }\r\n\r\n  const context: TypeContextObj = {\r\n    movieList: movies,\r\n    searchedMovie: searchMovie,\r\n    specificMovie: specificMovie,\r\n    favoritesList: favoritesList,\r\n    isLoading: isFetching,\r\n    error: errorMsg,\r\n    disabled: disabled,\r\n    fetchMovies: fetchMoviesHandler,\r\n    searchMovie: searchMovieHandler,\r\n    fetchSpecificMovie: fetchSpecificMovieHandler,\r\n    addToFavorites: addToFavoritesHandler,\r\n    removeFromFavorites: removeFromFavoritesHandler,\r\n  };\r\n\r\n  return (\r\n    <MovieContext.Provider value={context}>\r\n      {props.children}\r\n    </MovieContext.Provider>\r\n  );\r\n}\r\n\r\nexport default MovieContext;\r\n","/** @format */\r\n\r\nimport { FC, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../styles/navigation.css\";\r\n\r\nexport const Header: FC = () => {\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  function navToggleHandler() {\r\n    setToggle(!toggle);\r\n  }\r\n\r\n  const navCloseHandler = () => {\r\n    setToggle(false);\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <h2 className=\"logo\">Moviebox</h2>\r\n      <nav>\r\n        <ul\r\n          className=\"nav-links\"\r\n          style={{\r\n            right: toggle ? \"0%\" : \"-100%\",\r\n          }}\r\n        >\r\n          <Link\r\n            to=\"/\"\r\n            style={{ textDecoration: \"none\" }}\r\n            onClick={navCloseHandler}\r\n          >\r\n            <li>Movies</li>\r\n          </Link>\r\n          <Link\r\n            to=\"/favorites\"\r\n            style={{ textDecoration: \"none\" }}\r\n            onClick={navCloseHandler}\r\n          >\r\n            <li>Favorites</li>\r\n          </Link>\r\n          <Link\r\n            to=\"/search-movie\"\r\n            style={{ textDecoration: \"none\" }}\r\n            onClick={navCloseHandler}\r\n          >\r\n            <li>Search</li>\r\n          </Link>\r\n        </ul>\r\n      </nav>\r\n      <div className=\"burger-menu\" onClick={navToggleHandler}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport \"../../styles/movieCard.css\";\r\n\r\ntype MovieCardProps = {\r\n    children: any\r\n}\r\n\r\nexport const MovieCard: FC<MovieCardProps> = ({ children }) => {\r\n    return (\r\n        <div className=\"card-container\">\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n","/** @format */\r\n\r\nimport { FC } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MovieCard } from \"../../common/components/movieCard\";\r\nimport { Movie } from \"../../models/movie\";\r\nimport \"../../styles/movieItem.css\";\r\n\r\ntype MovieItemProps = {\r\n  movie: Movie;\r\n};\r\n\r\nexport const MovieItem: FC<MovieItemProps> = ({ movie }) => {\r\n  const history = useHistory();\r\n  const moviePoster = `https://image.tmdb.org/t/p/w1280/${movie.poster_path}`;\r\n\r\n  const handleClick = () => {\r\n    history.push(`movie-details/${movie.id}`);\r\n  };\r\n\r\n  return (\r\n    <MovieCard>\r\n      <img\r\n        src={moviePoster}\r\n        alt={movie.title}\r\n        className=\"image-holder\"\r\n        onClick={handleClick}\r\n      />\r\n      <div className=\"movie-info\" onClick={handleClick}>\r\n        <p className=\"title\">{movie.title}</p>\r\n        <p className=\"rating\">{movie.vote_average}</p>\r\n      </div>\r\n    </MovieCard>\r\n  );\r\n};\r\n","/** @format */\r\n\r\nimport { FC, useContext } from \"react\";\r\nimport { MovieItem } from \"../movies-screen/MovieItem\";\r\nimport MovieContext from \"../../context/movieContext\";\r\n\r\nexport const MovieFavorites: FC = () => {\r\n  const { favoritesList } = useContext(MovieContext);\r\n\r\n  return (\r\n    <section>\r\n      {favoritesList.length <= 0 && (\r\n        <p className=\"empty-msg\">Please add a movie to your favorite list.</p>\r\n      )}\r\n      <div className=\"movie-list-container\">\r\n        {favoritesList.map((movie) => (\r\n          <MovieItem movie={movie} key={movie.id} />\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","/** @format */\r\n\r\nimport { FC, useContext, useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport MovieContext from \"../../context/movieContext\";\r\nimport \"../../styles/movieDetails.css\";\r\n\r\nexport const MovieDetails: FC = () => {\r\n  const params = useParams<{ id: string }>();\r\n  const {\r\n    specificMovie,\r\n    isLoading,\r\n    favoritesList,\r\n    disabled,\r\n    fetchSpecificMovie,\r\n    addToFavorites,\r\n    removeFromFavorites,\r\n  } = useContext(MovieContext);\r\n  const moviePoster = `https://image.tmdb.org/t/p/w1280/${specificMovie.poster_path}`;\r\n\r\n  const genres = specificMovie.genres;\r\n\r\n  useEffect(() => {\r\n    fetchSpecificMovie(params.id);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [favoritesList]);\r\n\r\n  function addFavoriteHandler() {\r\n    addToFavorites(specificMovie);\r\n  }\r\n\r\n  function removeFavoriteHandler() {\r\n    removeFromFavorites(specificMovie);\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      {isLoading && <p className=\"loading\">Loading...</p>}\r\n      {!isLoading && (\r\n        <div className=\"details-container\">\r\n          <div className=\"image-detail-holder\">\r\n            <img src={moviePoster} alt={specificMovie.title} />\r\n          </div>\r\n          <div className=\"movie-detail-holder\">\r\n            <div className=\"title-detail-holder\">\r\n              <h2 className=\"details-title\">{specificMovie.title}</h2>\r\n              <div className=\"rating-holder\">\r\n                <i className=\"fas fa-star rating-icon\"></i>\r\n                <p className=\"rating-title\">{specificMovie.vote_average}</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"genre-holder\">\r\n              Genre:\r\n              {genres?.map((genre: any) => (\r\n                <p className=\"genre-title\" key={genre.id}>\r\n                  {genre.name}\r\n                </p>\r\n              ))}\r\n            </div>\r\n            <div className=\"overview-holder\">\r\n              <p>{specificMovie.overview}</p>\r\n            </div>\r\n            <div className=\"add-btn-holder\">\r\n              {disabled && (\r\n                <button className=\"remove-btn\" onClick={removeFavoriteHandler}>\r\n                  Remove from favorit\r\n                </button>\r\n              )}\r\n              {!disabled && (\r\n                <button className=\"add-btn\" onClick={addFavoriteHandler}>\r\n                  <p className=\"add-btn-icon\">+</p>\r\n                  Add to Favorites\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n","/** @format */\r\n\r\nexport const checkPickedCateGoryHandler = (\r\n  filter: string,\r\n  category: string\r\n) => {\r\n  return filter === category ? \"#222\" : \"#111\";\r\n};\r\n","/** @format */\r\n\r\nimport { FC } from \"react\";\r\nimport { Movie } from \"../../models/movie\";\r\nimport { MovieItem } from \"./MovieItem\";\r\n\r\ntype MovieListProps = {\r\n  movies: Movie[];\r\n};\r\n\r\nexport const MovieList: FC<MovieListProps> = ({ movies }) => {\r\n  return (\r\n    <div className=\"movie-list-container\">\r\n      {movies.map((movie: any) => (\r\n        <MovieItem movie={movie} key={movie.id} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","/** @format */\r\n\r\nimport { FC, useEffect } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { checkPickedCateGoryHandler } from \"../../common/functions/checkPickedCategoryHandler/checkPickedCategoryHandler\";\r\nimport { MovieList } from \"./MovieList\";\r\nimport MovieContext from \"../../context/movieContext\";\r\nimport \"../../styles/movieCategory.css\";\r\nimport \"../../styles/Global.css\";\r\n\r\nexport const MoviesScreen: FC = () => {\r\n  const { movieList, isLoading, error, fetchMovies } = useContext(MovieContext);\r\n  const [filter, setFilter] = useState(\"popular\");\r\n\r\n  useEffect(() => {\r\n    fetchMovies(filter);\r\n  }, [filter]);\r\n\r\n  const sortingHandler = (category: string) => {\r\n    setFilter(category);\r\n  };\r\n\r\n  if (error) return <p className=\"error-msg\">Something went wrong... :(</p>;\r\n\r\n  return (\r\n    <section>\r\n      <div className=\"category-btn-holder\">\r\n        <button\r\n          className=\"category-btn\"\r\n          style={{ background: checkPickedCateGoryHandler(filter, \"popular\") }}\r\n          onClick={() => sortingHandler(\"popular\")}\r\n        >\r\n          Popular\r\n        </button>\r\n        <button\r\n          className=\"category-btn\"\r\n          style={{\r\n            background: checkPickedCateGoryHandler(filter, \"top_rated\"),\r\n          }}\r\n          onClick={() => sortingHandler(\"top_rated\")}\r\n        >\r\n          Top Rated\r\n        </button>\r\n        <button\r\n          className=\"category-btn\"\r\n          style={{ background: checkPickedCateGoryHandler(filter, \"upcoming\") }}\r\n          onClick={() => sortingHandler(\"upcoming\")}\r\n        >\r\n          Upcoming\r\n        </button>\r\n      </div>\r\n\r\n      {isLoading ? (\r\n        <p className=\"loading\">Loading...</p>\r\n      ) : (\r\n        <MovieList movies={movieList} />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n","/** @format */\r\n\r\nimport { useContext, FormEvent, ChangeEvent, useState, FC } from \"react\";\r\nimport { Movie } from \"../../models/movie\";\r\nimport { MovieItem } from \"../movies-screen/MovieItem\";\r\nimport MovieContext from \"../../context/movieContext\";\r\nimport \"../../styles/Global.css\";\r\nimport \"../../styles/searchMovie.css\";\r\n\r\nexport const SearchMovie: FC = () => {\r\n  const { searchedMovie, isLoading, error, searchMovie } =\r\n    useContext(MovieContext);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  function onChangeHandler(e: ChangeEvent<HTMLInputElement>) {\r\n    setInputValue(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e: FormEvent) {\r\n    e.preventDefault();\r\n    searchMovie(inputValue);\r\n    setInputValue(\"\");\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search Movie...\"\r\n          value={inputValue}\r\n          onChange={onChangeHandler}\r\n        />\r\n        <button className=\"search-btn-icon\">\r\n          <i className=\"fas fa-search\"></i>\r\n        </button>\r\n      </form>\r\n      {isLoading && <p className=\"loading\">Loading...</p>}\r\n      {error && <p className=\"error-msg\">{error}</p>}\r\n      <div className=\"movie-list-container\">\r\n        {searchedMovie.map((movie: Movie) => (\r\n          <MovieItem movie={movie} key={movie.id} />\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","/** @format */\r\n\r\nimport { FC } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { MovieFavorites } from \"../features/favorites-screen/MovieFavorites\";\r\nimport { MovieDetails } from \"../features/movies-screen/MovieDetails\";\r\nimport { MoviesScreen } from \"../features/movies-screen/MoviesScreen\";\r\nimport { SearchMovie } from \"../features/search-screen/SearchMovie\";\r\nimport \"../styles/main.css\";\r\n\r\nexport const AppRoutes: FC = () => {\r\n  return (\r\n    <main>\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <MoviesScreen />\r\n        </Route>\r\n        <Route path=\"/favorites\">\r\n          <MovieFavorites />\r\n        </Route>\r\n        <Route path=\"/search-movie\">\r\n          <SearchMovie />\r\n        </Route>\r\n        <Route path=\"/movie-details/:id\">\r\n          <MovieDetails />\r\n        </Route>\r\n      </Switch>\r\n    </main>\r\n  );\r\n};\r\n","import { FC } from \"react\";\nimport { Header } from \"./common/components/Header\";\nimport { AppRoutes } from \"./app-routes/AppRoutes\";\n\nexport const App: FC = () => {\n  return (\n    <>\n      <Header />\n      <AppRoutes />\n    </>\n  );\n}\n\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { MovieContextProvider } from './context/movieContext';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <MovieContextProvider>\r\n        <App />\r\n      </MovieContextProvider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}